version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-app:latest
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
      # Add .env for secrets (ensure it's in .gitignore)
      - ./.env:/.env:ro
    # env_file:
    #  - .env # Load variables from .env file
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    # command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    # Use this command for production-like startup without reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000

  # Worker services (Example for C1, add others similarly)
  worker_c1:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-c1:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    # env_file:
    #   - .env
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    # Command to run the specific worker script
    command: python worker.py

  # --- C2 Department Workers ---\
  worker_data_retrieval:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-data-retrieval:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_data_retrieval.py

  worker_quantitative_analysis:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-quantitative-analysis:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_quantitative_analysis.py

  worker_qualitative_analysis:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-qualitative-analysis:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_qualitative_analysis.py

  worker_recommendation_generation:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-recommendation-generation:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_recommendation_generation.py

  worker_comparative_analysis:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-comparative-analysis:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_comparative_analysis.py

  worker_predictive_analysis:
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        platforms:
          - linux/amd64
          - linux/arm64
        tags:
          - alatar-worker-predictive-analysis:latest
    volumes:
      - ./app:/app/app
      - ./.env:/.env:ro
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - alatar_net
    command: python worker_predictive_analysis.py

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # env_file: # Removed as .env cannot be created easily
    environment:
      COMPOSE_DOCKER_CLI_BUILD: 1
      DOCKER_BUILDKIT: 1
      PYTHONUNBUFFERED: 1
      LOGGING_LEVEL: INFO
      POSTGRES_DB: alatar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      JWT_SECRET: YOUR_JWT_SECRET_HERE
      APP_SECRET_KEY: YOUR_APP_SECRET_KEY_HERE
      PGCRYPTO_SYM_KEY: YOUR_PGCRYPTO_KEY_HERE # Used for database encryption
      SHOPIFY_API_KEY: YOUR_SHOPIFY_API_KEY_HERE
      SHOPIFY_API_SECRET: YOUR_SHOPIFY_API_SECRET_HERE
      SHOPIFY_APP_URL: YOUR_SHOPIFY_APP_URL_HERE
      OPENROUTER_API_KEY: ece34997b0f1f265c22350b2bf3d0127ac2aeeacbac84cc0fbfb7e3c4527b804
      FRONTEND_URL: http://localhost:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LANGCHAIN_TRACING_V2: "true"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-user} -d $${POSTGRES_DB:-alatar_db}"] # Changed default DB name
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alatar_net

  rabbitmq: # Uncomment when RabbitMQ is needed (Phase 5)
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Management UI
    # env_file: # Removed as .env cannot be created easily
    #   - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/ # Persist data
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alatar_net

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alatar_net

volumes:
  postgres_data:
  rabbitmq_data: # Add volume for RabbitMQ persistence
  redis_data:

networks:
  alatar_net:
    driver: bridge
